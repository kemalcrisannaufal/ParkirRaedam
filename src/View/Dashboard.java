package View;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ASUS
 */

/**
 * Import.
 */
import Controller.ParkirController;
import Model.Parkir;
import java.util.Collections;
import Model.ParkirInap;
import Model.ParkirPerJam;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.LocalDateTime;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Main dasboard window of the application.
 */
public class Dashboard extends javax.swing.JFrame {

    /**
     * Creates new form dashboard
     */
    private final ParkirController parkirC = new ParkirController(); // Controller variable for parking
    private String tipeParkirEdit = ""; // Variable to store the edit parking type
    private String jenisKendaraanEdit =""; // Variable to store edit parking vehicle type
    
    /**
     * Creates new form dashboard
     */
    public Dashboard() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editDialog = new javax.swing.JDialog();
        PlatNomor = new javax.swing.JLabel();
        PlatNomorEditText = new javax.swing.JTextField();
        TipeParkir = new javax.swing.JLabel();
        JenisKendaraan = new javax.swing.JLabel();
        RadioButtonPerjam = new javax.swing.JRadioButton();
        RadioButtonInap = new javax.swing.JRadioButton();
        RadioButtonMotor = new javax.swing.JRadioButton();
        RadioButtonMobil = new javax.swing.JRadioButton();
        ButtonEditParkir = new javax.swing.JButton();
        editTitleLabel = new javax.swing.JLabel();
        jamComboBox = new javax.swing.JComboBox<>();
        menitComboBox = new javax.swing.JComboBox<>();
        detikComboBox = new javax.swing.JComboBox<>();
        jamEditLabel = new javax.swing.JLabel();
        menitEditLabel = new javax.swing.JLabel();
        detikEditLabel = new javax.swing.JLabel();
        waktuMasukTitleLabel = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        parkingHistoryLabel = new javax.swing.JLabel();
        rightRaedamLogo = new javax.swing.JLabel();
        dashboardLabel = new javax.swing.JLabel();
        logOutButton = new java.awt.Button();
        masukParkirMainButton = new java.awt.Button();
        tabelScrollPane = new javax.swing.JScrollPane();
        parkingHistoryTable = new javax.swing.JTable();
        leftPanel = new javax.swing.JPanel();
        leftRaedamLogo = new javax.swing.JLabel();
        raedamLabel = new javax.swing.JLabel();
        dashboardNavButton = new java.awt.Button();
        masukParkirNavButton = new java.awt.Button();
        keluarParkirNavButton = new java.awt.Button();
        pengaturanParkirNavButton = new java.awt.Button();
        laporanParkirNavButton = new java.awt.Button();
        keluarParkirMainButton = new java.awt.Button();
        greetingLabel = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();

        editDialog.setSize(630, 650);
        editDialog.setLocationRelativeTo(null);
        editDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                editDialogWindowClosing(evt);
            }
        });

        PlatNomor.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        PlatNomor.setText("Plat Nomor");

        TipeParkir.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        TipeParkir.setText("Tipe Parkir");

        JenisKendaraan.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        JenisKendaraan.setText("Jenis Kendaraan");

        buttonGroup1.add(RadioButtonPerjam);
        RadioButtonPerjam.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        RadioButtonPerjam.setText("Perjam");
        RadioButtonPerjam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioButtonPerjamActionPerformed(evt);
            }
        });

        buttonGroup1.add(RadioButtonInap);
        RadioButtonInap.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        RadioButtonInap.setText("Inap");
        RadioButtonInap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioButtonInapActionPerformed(evt);
            }
        });

        buttonGroup2.add(RadioButtonMotor);
        RadioButtonMotor.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        RadioButtonMotor.setText("Motor");
        RadioButtonMotor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioButtonMotorActionPerformed(evt);
            }
        });

        buttonGroup2.add(RadioButtonMobil);
        RadioButtonMobil.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        RadioButtonMobil.setText("Mobil");
        RadioButtonMobil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioButtonMobilActionPerformed(evt);
            }
        });

        ButtonEditParkir.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        ButtonEditParkir.setText("Edit Data Parkir");
        ButtonEditParkir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ButtonEditParkir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonEditParkirActionPerformed(evt);
            }
        });

        editTitleLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        editTitleLabel.setText("EDIT DATA PARKIR");

        jamComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "21", "23" }));
        jamComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jamComboBox.setVisible(false);

        menitComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "21", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        menitComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menitComboBox.setVisible(false);

        detikComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "21", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        detikComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        detikComboBox.setVisible(false);

        jamEditLabel.setText("Jam");
        jamEditLabel.setVisible(false);

        menitEditLabel.setText("Menit");
        menitEditLabel.setVisible(false);

        detikEditLabel.setText("Detik");
        detikEditLabel.setVisible(false);

        waktuMasukTitleLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        waktuMasukTitleLabel.setVisible(false);
        waktuMasukTitleLabel.setText("Waktu Masuk");

        javax.swing.GroupLayout editDialogLayout = new javax.swing.GroupLayout(editDialog.getContentPane());
        editDialog.getContentPane().setLayout(editDialogLayout);
        editDialogLayout.setHorizontalGroup(
            editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editDialogLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editTitleLabel)
                .addGap(217, 217, 217))
            .addGroup(editDialogLayout.createSequentialGroup()
                .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editDialogLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PlatNomor)
                            .addComponent(TipeParkir)
                            .addComponent(JenisKendaraan)
                            .addComponent(waktuMasukTitleLabel))
                        .addGap(45, 45, 45)
                        .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(editDialogLayout.createSequentialGroup()
                                .addComponent(jamEditLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jamComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(menitEditLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(menitComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                                .addComponent(detikEditLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(detikComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(editDialogLayout.createSequentialGroup()
                                .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(editDialogLayout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addComponent(PlatNomorEditText, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(editDialogLayout.createSequentialGroup()
                                        .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(RadioButtonMotor, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(RadioButtonPerjam))
                                        .addGap(85, 85, 85)
                                        .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(RadioButtonInap)
                                            .addComponent(RadioButtonMobil))))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(editDialogLayout.createSequentialGroup()
                        .addGap(239, 239, 239)
                        .addComponent(ButtonEditParkir)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        editDialogLayout.setVerticalGroup(
            editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editDialogLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(editTitleLabel)
                .addGap(34, 34, 34)
                .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PlatNomor)
                    .addComponent(PlatNomorEditText, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(72, 72, 72)
                .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RadioButtonPerjam)
                    .addComponent(TipeParkir)
                    .addComponent(RadioButtonInap))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(waktuMasukTitleLabel)
                    .addComponent(detikComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(detikEditLabel)
                    .addComponent(menitComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(menitEditLabel)
                    .addComponent(jamComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jamEditLabel))
                .addGap(42, 42, 42)
                .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JenisKendaraan)
                    .addComponent(RadioButtonMotor)
                    .addComponent(RadioButtonMobil))
                .addGap(64, 64, 64)
                .addComponent(ButtonEditParkir)
                .addContainerGap(105, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        parkingHistoryLabel.setBackground(new java.awt.Color(102, 204, 255));
        parkingHistoryLabel.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        parkingHistoryLabel.setForeground(new java.awt.Color(102, 204, 255));
        parkingHistoryLabel.setText("RIWAYAT PARKIR");
        getContentPane().add(parkingHistoryLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 480, -1, -1));

        rightRaedamLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/Logo Kanan Atas.png"))); // NOI18N
        getContentPane().add(rightRaedamLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 0, -1, -1));

        dashboardLabel.setBackground(new java.awt.Color(102, 204, 255));
        dashboardLabel.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        dashboardLabel.setForeground(new java.awt.Color(102, 204, 255));
        dashboardLabel.setText("BERANDA");
        getContentPane().add(dashboardLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 170, -1, -1));

        logOutButton.setActionCommand("mainKeluarParkir");
        logOutButton.setBackground(new java.awt.Color(255, 0, 51));
        logOutButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logOutButton.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        logOutButton.setForeground(new java.awt.Color(255, 255, 255));
        logOutButton.setLabel("Keluar Aplikasi");
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });
        getContentPane().add(logOutButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 920, 240, 40));

        masukParkirMainButton.setActionCommand("mainMasukParkir");
        masukParkirMainButton.setBackground(new java.awt.Color(102, 204, 255));
        masukParkirMainButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        masukParkirMainButton.setFont(new java.awt.Font("Dialog", 1, 30)); // NOI18N
        masukParkirMainButton.setForeground(new java.awt.Color(255, 255, 255));
        masukParkirMainButton.setLabel("MASUK PARKIR");
        masukParkirMainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masukParkirMainButtonActionPerformed(evt);
            }
        });
        getContentPane().add(masukParkirMainButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 260, 400, 150));

        parkingHistoryTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        parkingHistoryTable.setFont(new java.awt.Font("Tahoma", 0, 14));
        int n;
        if (parkirC.getListParkir().size() < 20){
            n = 20;
        } else {
            n = parkirC.getListParkir().size();
        }

        Object[][] objek = new Object[n][n];
        Collections.reverse(parkirC.getListParkir());
        for (int i = parkirC.getListParkir().size()-1; i >= 0; i--){
            for (int j = 5; j >= 0; j--){
                objek[i][0] = parkirC.getListParkir().get(i).getTipeParkir();
                objek[i][1] = parkirC.getListParkir().get(i).getPlatNomor();
                objek[i][2] = parkirC.getListParkir().get(i).getJenisKendaraan();
                objek[i][5] = parkirC.getListParkir().get(i).getStatusParkir();
                if (j == 3) {
                    if (parkirC.getListParkir().get(i) instanceof ParkirPerJam) {
                        objek[i][j] = ((ParkirPerJam) parkirC.getListParkir().get(i)).getWaktuMasuk().format(DateTimeFormatter.ofPattern("dd/MM/yy HH:mm:ss"));
                    } else {
                        objek[i][j] = ((ParkirInap) parkirC.getListParkir().get(i)).getTanggalMasuk();
                    }
                } else if (j == 4) {
                    if (parkirC.getListParkir().get(i).getStatusParkir().equalsIgnoreCase("SELESAI")) {
                        if (parkirC.getListParkir().get(i) instanceof ParkirPerJam) {
                            objek[i][j] = ((ParkirPerJam) parkirC.getListParkir().get(i)).getWaktuKeluar().format(DateTimeFormatter.ofPattern("dd/MM/yy HH:mm:ss"));
                        } else {
                            objek[i][j] = ((ParkirInap) parkirC.getListParkir().get(i)).getTanggalKeluar();
                        }
                    } else {
                        objek[i][j] = "--";
                    }
                }

            }
        }
        parkingHistoryTable.setModel(new javax.swing.table.DefaultTableModel(
            objek,
            new String [] {
                "Tipe Parkir", "Plat Nomor", "Jenis Kendaraan", "Waktu Masuk", "Waktu Keluar", "Status Parkir"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabelScrollPane.setViewportView(parkingHistoryTable);

        getContentPane().add(tabelScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 550, 856, 310));

        leftPanel.setBackground(new java.awt.Color(102, 204, 255));

        leftRaedamLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/WhatsApp_Image_2023-10-17_at_12.55.56-removebg-preview.png"))); // NOI18N
        leftRaedamLogo.setText("jLabel4");

        raedamLabel.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        raedamLabel.setForeground(new java.awt.Color(255, 255, 255));
        raedamLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        raedamLabel.setText("Raedam");

        dashboardNavButton.setActionCommand("beranda");
        dashboardNavButton.setBackground(new java.awt.Color(102, 204, 255));
        dashboardNavButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dashboardNavButton.setFont(new java.awt.Font("Dialog", 1, 25)); // NOI18N
        dashboardNavButton.setForeground(new java.awt.Color(255, 255, 255));
        dashboardNavButton.setLabel("Beranda");
        dashboardNavButton.setPreferredSize(new java.awt.Dimension(116, 41));
        dashboardNavButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashboardNavButtonActionPerformed(evt);
            }
        });

        masukParkirNavButton.setActionCommand("masukParkir");
        masukParkirNavButton.setBackground(new java.awt.Color(102, 204, 255));
        masukParkirNavButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        masukParkirNavButton.setFont(new java.awt.Font("Dialog", 1, 25)); // NOI18N
        masukParkirNavButton.setForeground(new java.awt.Color(255, 255, 255));
        masukParkirNavButton.setLabel("Masuk Parkir");
        masukParkirNavButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masukParkirNavButtonActionPerformed(evt);
            }
        });

        keluarParkirNavButton.setActionCommand("keluarParkir");
        keluarParkirNavButton.setBackground(new java.awt.Color(102, 204, 255));
        keluarParkirNavButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        keluarParkirNavButton.setFont(new java.awt.Font("Dialog", 1, 25)); // NOI18N
        keluarParkirNavButton.setForeground(new java.awt.Color(255, 255, 255));
        keluarParkirNavButton.setLabel("Keluar Parkir");
        keluarParkirNavButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keluarParkirNavButtonActionPerformed(evt);
            }
        });

        pengaturanParkirNavButton.setActionCommand("pengaturanParkir");
        pengaturanParkirNavButton.setBackground(new java.awt.Color(102, 204, 255));
        pengaturanParkirNavButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pengaturanParkirNavButton.setFont(new java.awt.Font("Dialog", 1, 25)); // NOI18N
        pengaturanParkirNavButton.setForeground(new java.awt.Color(255, 255, 255));
        pengaturanParkirNavButton.setLabel("Pengaturan Parkir");
        pengaturanParkirNavButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pengaturanParkirNavButtonActionPerformed(evt);
            }
        });

        laporanParkirNavButton.setActionCommand("laporanParkir");
        laporanParkirNavButton.setBackground(new java.awt.Color(102, 204, 255));
        laporanParkirNavButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        laporanParkirNavButton.setFont(new java.awt.Font("Dialog", 1, 25)); // NOI18N
        laporanParkirNavButton.setForeground(new java.awt.Color(255, 255, 255));
        laporanParkirNavButton.setLabel("Laporan Parkir");
        laporanParkirNavButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                laporanParkirNavButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(leftPanelLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(leftRaedamLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(raedamLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dashboardNavButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(masukParkirNavButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(keluarParkirNavButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pengaturanParkirNavButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(laporanParkirNavButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(leftRaedamLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(raedamLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(dashboardNavButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(masukParkirNavButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(keluarParkirNavButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(pengaturanParkirNavButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(laporanParkirNavButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(846, Short.MAX_VALUE))
        );

        getContentPane().add(leftPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        keluarParkirMainButton.setActionCommand("mainKeluarParkir");
        keluarParkirMainButton.setBackground(new java.awt.Color(102, 204, 255));
        keluarParkirMainButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        keluarParkirMainButton.setFont(new java.awt.Font("Dialog", 1, 30)); // NOI18N
        keluarParkirMainButton.setForeground(new java.awt.Color(255, 255, 255));
        keluarParkirMainButton.setLabel("KELUAR PARKIR");
        keluarParkirMainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keluarParkirMainButtonActionPerformed(evt);
            }
        });
        getContentPane().add(keluarParkirMainButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 260, 400, 150));

        int jam = LocalDateTime.now().getHour();
        String teks = "";
        if (jam > 4 && jam < 11) {
            teks = "Selamat Pagi, ";
        } else if (jam < 15) {
            teks = "Selamat Siang, ";
        } else if (jam < 18) {
            teks = "Selamat Sore, ";
        } else {
            teks = "Selamat Malam, ";
        }
        greetingLabel.setBackground(new java.awt.Color(51, 204, 255));
        greetingLabel.setFont(new java.awt.Font("Dialog", 1, 30)); // NOI18N
        greetingLabel.setForeground(new java.awt.Color(0, 153, 255));
        greetingLabel.setText(teks + Session.sesi.petugas.getNamaPetugas());
        getContentPane().add(greetingLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 90, 370, 40));

        deleteButton.setText("Delete");
        deleteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        getContentPane().add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 500, 80, -1));

        editButton.setText("Edit");
        editButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });
        getContentPane().add(editButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1250, 500, 80, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Handles the action when the "Keluar Aplikasi" button is clicked.
     */
    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        // TODO add your handling code here:
        new Welcome().setVisible(true);
        dispose();
    }//GEN-LAST:event_logOutButtonActionPerformed

    /**
     * Handles the action when the "Beranda" button is clicked.
     */
    private void dashboardNavButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashboardNavButtonActionPerformed
        // TODO add your handling code here:
        new Dashboard().setVisible(true);
        dispose();
    }//GEN-LAST:event_dashboardNavButtonActionPerformed

    /**
     * Handles the action when the "Masuk Parkir" button is clicked.
     */
    private void masukParkirNavButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masukParkirNavButtonActionPerformed
        // TODO add your handling code here:
        new MasukParkir().setVisible(true);
        dispose();
    }//GEN-LAST:event_masukParkirNavButtonActionPerformed

    /**
     * Handles the action when the "Keluar Parkir" button is clicked.
     */
    private void keluarParkirNavButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keluarParkirNavButtonActionPerformed
        // TODO add your handling code here:
        new KeluarParkir().setVisible(true);
        dispose();
    }//GEN-LAST:event_keluarParkirNavButtonActionPerformed

    /**
     * Handles the action when the "Pengaturan Parkir" button is clicked.
     */
    private void pengaturanParkirNavButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pengaturanParkirNavButtonActionPerformed
        // TODO add your handling code here:
        new PengaturanParkirView().setVisible(true);
        dispose();
    }//GEN-LAST:event_pengaturanParkirNavButtonActionPerformed

    /**
     * Handles the action when the "Laporan Parkir" button is clicked.
     */
    private void laporanParkirNavButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_laporanParkirNavButtonActionPerformed
        // TODO add your handling code here:
        new TampilData().setVisible(true);
        dispose();
    }//GEN-LAST:event_laporanParkirNavButtonActionPerformed

    /**
     * Handles the action when the "Masuk Parkir" button is clicked.
     */
    private void masukParkirMainButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masukParkirMainButtonActionPerformed
        // TODO add your handling code here:
        new MasukParkir().setVisible(true);
        dispose();
    }//GEN-LAST:event_masukParkirMainButtonActionPerformed

    /**
     * Handles the action when the "Keluar Parkir" button is clicked.
     */
    private void keluarParkirMainButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keluarParkirMainButtonActionPerformed
        // TODO add your handling code here:
        new KeluarParkir().setVisible(true);
        dispose();
    }//GEN-LAST:event_keluarParkirMainButtonActionPerformed
    
    /**
     * Deletes a parking record from the system.
     */
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        try {
            if (((String) parkingHistoryTable.getValueAt(parkingHistoryTable.getSelectedRow(), 5)).equals("PARKIR")){
                String platNomor = (String) parkingHistoryTable.getValueAt(parkingHistoryTable.getSelectedRow(), 1);
                Parkir parkir = parkirC.searchByPlateNum(platNomor);
                int status = parkirC.deleteData(parkir);
                if (status != 400){
                    JOptionPane.showMessageDialog(this, "Data parkir berhasil dihapus");   
                    DefaultTableModel model = Komponen.CreateTableModelParkir(parkirC.getListParkir());
                    parkingHistoryTable.setModel(model);
                } else {
                    JOptionPane.showMessageDialog(this, "Data gagal dihapus");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Parkir selesai hanya dapat dihapus melalui database");
            }
        } catch (Exception e){
            JOptionPane.showMessageDialog(this, "Data pada tabel belum dipilih");
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * Opens an editing window for a selected parking entry.
     */
    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        try {
            if (((String) parkingHistoryTable.getValueAt(parkingHistoryTable.getSelectedRow(), 5)).equals("PARKIR")){
                PlatNomorEditText.setText((String) parkingHistoryTable.getValueAt(parkingHistoryTable.getSelectedRow(), 1));
                editDialog.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Edit hanya dapat digunakan untuk parkir dengan status PARKIR");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Pilih entri pada tabel untuk mengedi data");
        }
        
    }//GEN-LAST:event_editButtonActionPerformed
    /**
    * Updates the details of a parking entry after editing.
    */
    private void ButtonEditParkirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEditParkirActionPerformed
        try {
            Parkir parkir = parkirC.searchByPlateNum(((String) parkingHistoryTable.getValueAt(parkingHistoryTable.getSelectedRow(), 1)));
            
            if(((String) parkingHistoryTable.getValueAt(parkingHistoryTable.getSelectedRow(), 5)).equals("PARKIR")) {
                String platNomor = PlatNomorEditText.getText();
                if (!platNomor.isEmpty() && !tipeParkirEdit.isEmpty() && !jenisKendaraanEdit.isEmpty()) {
                    if (parkir.getTipeParkir().equals("INAP") && tipeParkirEdit.equals("PERJAM")) {
                        LocalDate waktu = ((ParkirInap) parkir).getTanggalMasuk();
                        String waktuMasuk =  String.valueOf(waktu.getYear()) + "-" + String.valueOf(waktu.getMonthValue()) + "-" + String.valueOf(waktu.getDayOfMonth()) 
                                + " " + (String) jamComboBox.getSelectedItem() + ":" + (String) menitComboBox.getSelectedItem() + ":" + (String) detikComboBox.getSelectedItem();                    
                        parkirC.updateDataParkir(parkir, platNomor, tipeParkirEdit, jenisKendaraanEdit, waktuMasuk);
                    } else {
                        parkirC.updateDataParkir(parkir, platNomor, tipeParkirEdit, jenisKendaraanEdit, "");
                    }
                    
                    DefaultTableModel model = Komponen.CreateTableModelParkir(parkirC.getAllParkirData());
                    parkingHistoryTable.setModel(model);
                    editDialog.dispose();
                } else {
                    editDialog.dispose();
                    JOptionPane.showMessageDialog(this, "Semua Data harus diisi");
                    
                }
                parkingHistoryTable.clearSelection();
                buttonGroup1.clearSelection();
                buttonGroup2.clearSelection();
                jamEditLabel.setVisible(false);
                menitEditLabel.setVisible(false);
                detikEditLabel.setVisible(false);
                waktuMasukTitleLabel.setVisible(false);
                jamComboBox.setVisible(false);
                menitComboBox.setVisible(false);
                detikComboBox.setVisible(false);
                tipeParkirEdit = "";
                jenisKendaraanEdit = "";
            } else {
                JOptionPane.showMessageDialog(this, "Edit hanya dapat dilakukan untuk kendaraan yang masih parkir");
            }            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Pilih entri pada tabel untuk mengedit data");
        }
        
    }//GEN-LAST:event_ButtonEditParkirActionPerformed

    /**
     * Handles the action event when the "PERJAM" radio button is selected.
     */
    private void RadioButtonPerjamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioButtonPerjamActionPerformed
        tipeParkirEdit = "PERJAM";
        if (parkirC.searchByPlateNum(PlatNomorEditText.getText()).getTipeParkir().equals("INAP")){
            jamEditLabel.setVisible(true);
            menitEditLabel.setVisible(true);
            detikEditLabel.setVisible(true);
            waktuMasukTitleLabel.setVisible(true);
            jamComboBox.setVisible(true);
            menitComboBox.setVisible(true);
            detikComboBox.setVisible(true);
        }
    }//GEN-LAST:event_RadioButtonPerjamActionPerformed

    /**
     *  Handles the action event when the "INAP" radio button is selected for editing.
     */
    private void RadioButtonInapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioButtonInapActionPerformed
        tipeParkirEdit = "INAP";
    }//GEN-LAST:event_RadioButtonInapActionPerformed

    /**
     * Handles the action event when the "Motor" radio button is selected for editing.
     */
    private void RadioButtonMotorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioButtonMotorActionPerformed
        jenisKendaraanEdit = "MOTOR";
    }//GEN-LAST:event_RadioButtonMotorActionPerformed

    /**
     * Handles the action event when the "Mobil" radio button is selected for editing.
     */
    private void RadioButtonMobilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioButtonMobilActionPerformed
        jenisKendaraanEdit = "MOBIL";
    }//GEN-LAST:event_RadioButtonMobilActionPerformed

    /**
     * Handles the window closing event for the editing window.
     */
    private void editDialogWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_editDialogWindowClosing
        parkingHistoryTable.clearSelection();
        buttonGroup1.clearSelection();
        buttonGroup2.clearSelection();
        jamEditLabel.setVisible(false);
        menitEditLabel.setVisible(false);
        detikEditLabel.setVisible(false);
        waktuMasukTitleLabel.setVisible(false);
        jamComboBox.setVisible(false);
        menitComboBox.setVisible(false);
        detikComboBox.setVisible(false);
    }//GEN-LAST:event_editDialogWindowClosing

    /**
     * Main method to run the application.
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonEditParkir;
    private javax.swing.JLabel JenisKendaraan;
    private javax.swing.JLabel PlatNomor;
    private javax.swing.JTextField PlatNomorEditText;
    private javax.swing.JRadioButton RadioButtonInap;
    private javax.swing.JRadioButton RadioButtonMobil;
    private javax.swing.JRadioButton RadioButtonMotor;
    private javax.swing.JRadioButton RadioButtonPerjam;
    private javax.swing.JLabel TipeParkir;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel dashboardLabel;
    private java.awt.Button dashboardNavButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JComboBox<String> detikComboBox;
    private javax.swing.JLabel detikEditLabel;
    private javax.swing.JButton editButton;
    private javax.swing.JDialog editDialog;
    private javax.swing.JLabel editTitleLabel;
    private javax.swing.JLabel greetingLabel;
    private javax.swing.JComboBox<String> jamComboBox;
    private javax.swing.JLabel jamEditLabel;
    private java.awt.Button keluarParkirMainButton;
    private java.awt.Button keluarParkirNavButton;
    private java.awt.Button laporanParkirNavButton;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JLabel leftRaedamLogo;
    private java.awt.Button logOutButton;
    private java.awt.Button masukParkirMainButton;
    private java.awt.Button masukParkirNavButton;
    private javax.swing.JComboBox<String> menitComboBox;
    private javax.swing.JLabel menitEditLabel;
    private javax.swing.JLabel parkingHistoryLabel;
    private javax.swing.JTable parkingHistoryTable;
    private java.awt.Button pengaturanParkirNavButton;
    private javax.swing.JLabel raedamLabel;
    private javax.swing.JLabel rightRaedamLogo;
    private javax.swing.JScrollPane tabelScrollPane;
    private javax.swing.JLabel waktuMasukTitleLabel;
    // End of variables declaration//GEN-END:variables
}
